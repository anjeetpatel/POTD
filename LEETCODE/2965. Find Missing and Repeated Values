//cpp code
class Solution {
public:
    vector<int> findMissingAndRepeatedValues(vector<vector<int>>& grid) {
        vector<int> res(2);
        vector<int> v;
        int dup, miss;
        int n = grid.size();
        for (int i = 0; i < n; i++) {
            int j = 0;
            while (j < n) {
                v.push_back(grid[i][j]);
                j++;
            }
        }
        sort(v.begin(), v.end());
        for (int i = 0; i < v.size() - 1; i++) {
            if (v[i] == v[i + 1])
                dup = v[i];
        }
        int vsum=0;
        for(auto it:v){
            vsum+=it;
        }
        n = n * n;
        int sum = (n * (n + 1)) / 2;
        miss = vsum-dup;
        res[0]=dup;
        res[1]=sum-miss;
        return res;
    }
};
