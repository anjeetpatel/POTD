//java solution
Given a string, find the minimum number of characters to be inserted to convert it to a palindrome.

Examples :

Input: str = "abcd"
Output: 3
Explanation: Inserted character marked with bold characters in dcbabcd, here we need minimum three characters to make it palindrome.
Input: str = "aa"
Output: 0
Explanation: "aa" is already a palindrome.
Expected Time Complexity: O(n2)
Expected Auxiliary Space: O(n2)

Constraints:
1 ≤ |str| ≤ 500
str contains only lowercase alphabets

class Solution{
    static int n;
    static int dp[][];
    static int countMin(String str)
    {
        // code here
        n=str.length();
        dp=new int[n+1][n+1];
        for(int d[]:dp)Arrays.fill(d,-1);
        return solve(str,0,n-1);
    }
    static int solve(String s,int i,int j){
        if(i>=j)return 0;
        if(dp[i][j]!=-1)return dp[i][j];
        
        if(s.charAt(i)==s.charAt(j)){
            return dp[i][j]= solve(s,i+1,j-1);
        }
        
        // insert at left
        int left=1+solve(s,i,j-1);
        
        int right=1+solve(s,i+1,j);
        
        return dp[i][j]= Math.min(left,right);
    }
}
