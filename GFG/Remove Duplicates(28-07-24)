Given a string str without spaces, the task is to remove all duplicate characters from it, keeping only the first occurrence.

Note: The original order of characters must be kept the same. 

Examples :

Input: str = "zvvo"
Output: "zvo"
Explanation: Only keep the first occurrence
Input: str = "gfg"
Output: "gf"
Explanation: Only keep the first occurrence
Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)

Constraints:
1 <= |str| <= 105
str contains lowercase English alphabets

//java solution

class Solution {
    String removeDups(String str) {
    int j = 0;
     char[] chars = str.toCharArray();
        int[] fre = new int[26];
        for (int i = 0; i < chars.length; i++) {
            if (fre[chars[i] - 'a'] == 0) chars[j++] = chars[i];
            fre[chars[i] - 'a'] = 1;
        }
        return new String(chars, 0, j);
    }
}
